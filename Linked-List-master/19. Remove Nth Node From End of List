给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？

解题思路：
         使用两个指针遍历，先让第一个指针向后遍历n次，再让两个指针同时遍历，那么第一个指针始终比第二个指针快n步，当第一个指针走到链表末尾时
         ，第二个指针刚好走到倒数n+1的位置
代码：

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        auto dummy = new ListNode(0);
        dummy->next = head;
        auto first = dummy,second = dummy;
        while(n--)
        {
            first = first->next;
        }
        while(first->next)
        {
            first = first->next;
            second = second->next;    
        }
        second->next = second->next->next;
        return dummy->next;
    }
};
         
